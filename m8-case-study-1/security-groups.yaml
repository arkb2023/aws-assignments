AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Provisions an Security groups for the Web Tier, Application Tier and Database Tier

Metadata:
  Comment: >
    This security groups are used for module 8 case study. 
    It provisions an Security groups for the Web Tier, Application Tier and Database Tier
    Web Tier Security Group Allow
      HTTP (port 80) from anywhere (for web access).
      SSH (port 22) from anywhere (for remote access).
    Application Tier Security Group Allow
      SSH (port 22) only from the Web Tier’s
    Database Tier Security Group Allow
      MySQL (port 3306) only from the Application Tier’s.

Parameters:
  AppNameTagValue:
    Description: 'Specify a value for the AppName tag, that will be applied to your infrastructure resources that support tags; minimum length: 3, maximum: 50.'
    Type: String
    Default: CF-m8-case-study-1-app
    MaxLength: 50
    MinLength: 3

  Env:
    Description: The type of environment with which to tag your infrastructure resources that support tags.
    Type: String
    AllowedValues:
      - Dev
      - Test
      - Prod
    Default: Dev

  NetworkStackName:
    Description: The name of the CloudFormation stack you created for network resources.
    Type: String
    Default: cf-module8-base-network
    AllowedPattern: ^[a-zA-Z]{1}[a-zA-Z0-9-]*$
    MaxLength: 128
    MinLength: 1


Conditions:
  IsProduction: !Equals
    - !Ref Env
    - Prod

Resources:

  # Web Tier Security Group Allow
  #   HTTP (port 80) from anywhere (for web access).
  #   SSH (port 22) from anywhere (for remote access).
  WebTierSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for the load balancer.
      # SecurityGroupEgress Not required due to ingress stateful rule
      # SecurityGroupEgress:
      #   - CidrIp: 0.0.0.0/0
      #     FromPort: 80
      #     IpProtocol: tcp
      #     ToPort: 80
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "${AppNameTagValue}-${Env}-SG-Web"
        - Key: AppName
          Value: !Ref AppNameTagValue
        - Key: Env
          Value: !Ref Env
        - Key: Tier
          Value: Web

      VpcId: !ImportValue
        Fn::Sub: ${NetworkStackName}-VpcId

  # Application Tier Security Group Allow
  #   SSH (port 22) only from the Web Tier’s
  AppTierSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for application instances.
      # SecurityGroupEgress Not required due to ingress stateful rule
      # SecurityGroupEgress:
      #   - CidrIp: 0.0.0.0/0
      #     FromPort: 80
      #     IpProtocol: tcp
      #     ToPort: 80
      #   - CidrIp: 0.0.0.0/0
      #     FromPort: 443
      #     IpProtocol: tcp
      #     ToPort: 443
      SecurityGroupIngress:
        # Allow ssh from Webtier
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref 'WebTierSecurityGroup'
        # Conditionally allow SSH from anywhere (debug)
        - Fn::If:
            - IsProduction
            - !Ref "AWS::NoValue"
            - 
              IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: 0.0.0.0/0

      Tags:
        - Key: Name
          Value: !Sub "${AppNameTagValue}-${Env}-SG-App"
        - Key: AppName
          Value: !Ref AppNameTagValue
        - Key: Env
          Value: !Ref Env
        - Key: Tier
          Value: App

      VpcId: !ImportValue
        Fn::Sub: ${NetworkStackName}-VpcId

  # Database Tier Security Group Allow
  #   MySQL (port 3306) only from the Application Tier’s.
  DatabaseTierSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for database instance.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref 'AppTierSecurityGroup'
      Tags:
        - Key: Name
          Value: !Sub "${AppNameTagValue}-${Env}-SG-DB"
        - Key: AppName
          Value: !Ref AppNameTagValue
        - Key: Env
          Value: !Ref Env
        - Key: Tier
          Value: DB

      VpcId: !ImportValue
        Fn::Sub: ${NetworkStackName}-VpcId


Outputs:

  WebTierSecurityGroupId:
    Value: !Ref 'WebTierSecurityGroup'
    Export:
      Name: !Sub '${AWS::StackName}-WebTierSecurityGroupId'

  AppTierSecurityGroupId:
    Value: !Ref 'AppTierSecurityGroup'
    Export:
      Name: !Sub '${AWS::StackName}-AppTierSecurityGroupId'

  DatabaseTierSecurityGroupId:
    Value: !Ref 'DatabaseTierSecurityGroup'
    Export:
      Name: !Sub '${AWS::StackName}-DatabaseTierSecurityGroupId'
